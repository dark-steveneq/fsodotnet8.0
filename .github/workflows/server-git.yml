name: Build Server (Git)

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths:
      - .github/workflows/server-git.yml
      - TSOClient/FSO.Server
      - TSOClient/FSO.Common
      - TSOClient/FSO.Common.DatabaseService
      - TSOClient/FSO.Common.Domain
      - TSOClient/FSO.Content
      - TSOClient/FSO.Files
      - TSOClient/FSO.LotView
      - TSOClient/FSO.Server.Api
      - TSOClient/FSO.Server.Client
      - TSOClient/FSO.Server.Datbase
      - TSOClient/FSO.Server.Domain
      - TSOClient/FSO.Server.Protocol
      - TSOClient/FSO.SimAntics
      - TSOClient/FSO.Vitaboy
      - Others/libs/TargaImgePCL
  pull_request:
    branches: [ "master" ]
    paths:
      - .github/workflows/docker-git.yml
      - TSOClient/FSO.Server
      - TSOClient/FSO.Common
      - TSOClient/FSO.Common.DatabaseService
      - TSOClient/FSO.Common.Domain
      - TSOClient/FSO.Content
      - TSOClient/FSO.Files
      - TSOClient/FSO.LotView
      - TSOClient/FSO.Server.Api
      - TSOClient/FSO.Server.Client
      - TSOClient/FSO.Server.Datbase
      - TSOClient/FSO.Server.Domain
      - TSOClient/FSO.Server.Protocol
      - TSOClient/FSO.SimAntics
      - TSOClient/FSO.Vitaboy
      - Others/libs/TargaImgePCL

jobs:
  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 1

    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
      
    - name: Restore NuGet packages
      working-directory: ./TSOClient/FSO.Server/
      run: dotnet restore

    - name: Build server
      working-directory: ./TSOClient/FSO.Server/
      run: RUN dotnet publish FSO.Server.csproj -c Release -o ./out

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fsodotnet8.0server-windows-${{ github.ref }}
        path: ./TSOClient/FSO.Server/out

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-24.04
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 1

    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'
      
    - name: Restore NuGet packages
      working-directory: ./TSOClient/FSO.Server/
      run: dotnet restore

    - name: Build server
      working-directory: ./TSOClient/FSO.Server/
      run: RUN dotnet publish FSO.Server.csproj -c Release -o ./out

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fsodotnet8.0server-linux-${{ github.ref }}
        path: ./TSOClient/FSO.Server/out

  build-docker:
    name: Build Docker images
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        fetch-depth: 1
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to ghcr.io
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build and push Docker images
      uses: docker/build-push-action@v6.10.0
      with:
        context: .
        file: ./docker/Dockerfile
        pull: true
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ghcr.io/${{ github.repository }}:git
